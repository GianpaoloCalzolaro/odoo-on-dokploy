  web:
    image: odoo:${ODOO_VERSION:-18.0}
    container_name: odoo-web
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - HOST=db
      - USER=${POSTGRES_USER:-odoo}
      - PASSWORD=${POSTGRES_PASSWORD:-odoo}
      - ADMIN_PASSWD=${ADMIN_PASSWD:-change_me}
    command: >
      odoo
      --proxy-mode
      --gevent-port=8072
      --db-filter=.*            # mostra tutti i db disponibili
      --admin-passwd=${ADMIN_PASSWD:-change_me}
      # (IMPORTANTE) non mettere "-d <nome_db>" qui
    volumes:
      - odoo-web-data:/var/lib/odoo
      - ./addons:/mnt/extra-addons
    ports:
      - "8069:8069"
      - "8072:8072"
    labels:
      - traefik.enable=true
      - traefik.docker.network=dokploy-network

      - traefik.http.routers.odoo.rule=Host(`odoomodule-test-ov7mcd-a58ee3-167-99-99-29.traefik.me`)
      - traefik.http.routers.odoo.entrypoints=web
      - traefik.http.middlewares.odoo-redirect-https.redirectscheme.scheme=https
      - traefik.http.routers.odoo.middlewares=odoo-redirect-https

      - traefik.http.routers.odoo-secure.rule=Host(`odoomodule-test-ov7mcd-a58ee3-167-99-99-29.traefik.me`)
      - traefik.http.routers.odoo-secure.entrypoints=websecure
      - traefik.http.routers.odoo-secure.tls.certresolver=letsencrypt
      - traefik.http.routers.odoo-secure.service=odoo-svc
      - traefik.http.services.odoo-svc.loadbalancer.server.port=8069

      - traefik.http.routers.odoo-ws.rule=Host(`odoomodule-test-ov7mcd-a58ee3-167-99-99-29.traefik.me`) && PathPrefix(`/websocket`)
      - traefik.http.routers.odoo-ws.entrypoints=websecure
      - traefik.http.routers.odoo-ws.tls.certresolver=letsencrypt
      - traefik.http.routers.odoo-ws.service=odoo-ws-svc
      - traefik.http.services.odoo-ws-svc.loadbalancer.server.port=8072
    networks:
      - dokploy-network





